require 'hipchat'

#
# Provides a Chef exception handler so you can send information about
# chef-client failures to a HipChat room.
#
# Docs: http://wiki.opscode.com/display/chef/Exception+and+Report+Handlers
#
# Install - add the following to your client.rb:
#   require 'hipchat/chef'
#   hipchat_handler = HipChat::NotifyRoom.new("<api token>", "<room name>")
#   exception_handlers << hipchat_handler
#

module HipChat
  class NotifyRoom < Chef::Handler

    def initialize(notify_users=false)
      @api_token = "<%= @api_token %>"
      @room_name = "<%= @room_name %>"
      @notify_users = notify_users
    end

    def report
      unless node.chef_environment == "dev"
        if run_status.failed?
          msg = "Run failed for #{node.name} (#{node[:ec2][:public_ipv4]}): #{run_status.formatted_exception}"
          color = 'red'
        else
          msg = "Run complete for #{node.name} (#{node[:ec2][:public_ipv4]}).\n Run list: [#{node.run_list.to_a.join(',')}].\n #{run_status.elapsed_time}s elapsed."
          color = 'green'
        end
        client = HipChat::Client.new(@api_token)
        client[@room_name].send("Chef", msg, {:notify => @notify_users, :color => color})
      end
    end
  end
end
